{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trong\\\\Desktop\\\\Chat App using React and Firebase\\\\src\\\\context\\\\ChatContext.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-undef */\nimport { useContext, useReducer } from \"react\";\nimport { useState } from \"react\";\nimport { createContext } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"../firebase\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatContext = /*#__PURE__*/createContext();\nexport const ChatContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const INITIAL_STATE = {\n    user: {},\n    chatId\n  };\n\n  const chatReducer = (state, action) => {\n    switch (action.type) {\n      case \"CHANGE_USER\":\n        return {\n          user: action,\n          payload,\n          chatId: currentUser.uid > action.payload.uid ? currentUser.uid + action.payload.uid : action.payload.uid + currentUser.uid\n        };\n\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(chatReducer, INITIAL_STATE);\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      data: state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatContextProvider, \"j7iuR1KHMw0ikD9YRG3aml+uPp8=\");\n\n_c = ChatContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatContextProvider\");","map":{"version":3,"sources":["C:/Users/trong/Desktop/Chat App using React and Firebase/src/context/ChatContext.js"],"names":["useContext","useReducer","useState","createContext","onAuthStateChanged","auth","AuthContext","ChatContext","ChatContextProvider","children","currentUser","INITIAL_STATE","user","chatId","chatReducer","state","action","type","payload","uid","dispatch","data"],"mappings":";;;AAAA;AACA,SAASA,UAAT,EAAqBC,UAArB,QAAuC,OAAvC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,EAAjC;AAEP,OAAO,MAAMK,mBAAmB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAAkBV,UAAU,CAACM,WAAD,CAAlC;AACA,QAAMK,aAAa,GAAG;AAClBC,IAAAA,IAAI,EAAE,EADY;AAElBC,IAAAA;AAFkB,GAAtB;;AAKA,QAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,YAAQA,MAAM,CAACC,IAAf;AACI,WAAK,aAAL;AACI,eAAO;AACHL,UAAAA,IAAI,EAAEI,MADH;AACWE,UAAAA,OADX;AAEHL,UAAAA,MAAM,EAAEH,WAAW,CAACS,GAAZ,GAAkBH,MAAM,CAACE,OAAP,CAAeC,GAAjC,GACFT,WAAW,CAACS,GAAZ,GAAkBH,MAAM,CAACE,OAAP,CAAeC,GAD/B,GAEFH,MAAM,CAACE,OAAP,CAAeC,GAAf,GAAqBT,WAAW,CAACS;AAJpC,SAAP;;AAMJ;AACI,eAAOJ,KAAP;AATR;AAWH,GAZD;;AAcA,QAAM,CAACA,KAAD,EAAQK,QAAR,IAAoBnB,UAAU,CAACa,WAAD,EAAcH,aAAd,CAApC;AAEA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEU,MAAAA,IAAI,EAAEN,KAAR;AAAeK,MAAAA;AAAf,KAA7B;AAAA,cACKX;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA5BM;;GAAMD,mB;;KAAAA,mB","sourcesContent":["/* eslint-disable no-undef */\r\nimport { useContext, useReducer } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { createContext } from \"react\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { auth } from \"../firebase\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nexport const ChatContext = createContext();\r\n\r\nexport const ChatContextProvider = ({ children }) => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const INITIAL_STATE = {\r\n        user: {},\r\n        chatId\r\n    }\r\n\r\n    const chatReducer = (state, action) => {\r\n        switch (action.type) {\r\n            case \"CHANGE_USER\":\r\n                return {\r\n                    user: action, payload,\r\n                    chatId: currentUser.uid > action.payload.uid\r\n                        ? currentUser.uid + action.payload.uid\r\n                        : action.payload.uid + currentUser.uid,\r\n                }\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(chatReducer, INITIAL_STATE);\r\n\r\n    return (\r\n        <ChatContext.Provider value={{ data: state, dispatch }}>\r\n            {children}\r\n        </ChatContext.Provider>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}