{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trong\\\\Desktop\\\\Chat App using React and Firebase\\\\src\\\\components\\\\Input.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport Img from \"../img/img.png\";\nimport Attach from \"../img/attach.png\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { Timestamp, arrayUnion, doc, updateDoc } from \"firebase/firestore\";\nimport { db, storage } from \"../firebase\";\nimport { v4 as uuid } from \"uuid\";\nimport { getDownloadURL, uploadBytesResumable } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = () => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(null);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    data\n  } = useContext(ChatContext);\n\n  const handleSend = async () => {\n    if (img) {\n      const storageRef = ref(storage, uuid());\n      const uploadTask = uploadBytesResumable(storageRef, img);\n      uploadTask.on(error => {// setErr(true);\n      }, () => {\n        getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n          await updateDoc(doc(db, \"chats\", data.chatId), {\n            messages: arrayUnion({\n              id: uuid(),\n              text,\n              senderId: currentUser.uid,\n              date: Timestamp.now(),\n              img: downloadURL\n            })\n          });\n        });\n      });\n    } else {\n      await updateDoc(doc(db, \"chats\", data.chatId), {\n        messages: arrayUnion({\n          id: uuid(),\n          text,\n          senderId: currentUser.uid,\n          date: Timestamp.now()\n        })\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Vi\\u1EBFt tin nh\\u1EAFn ...\",\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Attach,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        style: {\n          display: \"none\"\n        },\n        id: \"file\",\n        onChange: e => setImg(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"LxBGUThHibwmApaPJomxIOCeC+Y=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/trong/Desktop/Chat App using React and Firebase/src/components/Input.jsx"],"names":["React","useContext","useState","Img","Attach","ChatContext","AuthContext","Timestamp","arrayUnion","doc","updateDoc","db","storage","v4","uuid","getDownloadURL","uploadBytesResumable","Input","text","setText","img","setImg","currentUser","data","handleSend","storageRef","ref","uploadTask","on","error","snapshot","then","downloadURL","chatId","messages","id","senderId","uid","date","now","e","target","value","display","files"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport Img from \"../img/img.png\";\r\nimport Attach from \"../img/attach.png\";\r\nimport { ChatContext } from \"../context/ChatContext\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { Timestamp, arrayUnion, doc, updateDoc } from \"firebase/firestore\";\r\nimport { db, storage } from \"../firebase\";\r\nimport { v4 as uuid } from \"uuid\"\r\nimport { getDownloadURL, uploadBytesResumable } from \"firebase/storage\";\r\n\r\nconst Input = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [img, setImg] = useState(null);\r\n  const { currentUser } = useContext(AuthContext);\r\n  const { data } = useContext(ChatContext);\r\n  const handleSend = async () => {\r\n    if (img) {\r\n      const storageRef = ref(storage, uuid());\r\n\r\n      const uploadTask = uploadBytesResumable(storageRef, img);\r\n\r\n      uploadTask.on(\r\n        (error) => {\r\n          // setErr(true);\r\n        },\r\n        () => {\r\n          getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\r\n            await updateDoc(doc(db, \"chats\", data.chatId), {\r\n              messages: arrayUnion({\r\n                id: uuid(),\r\n                text,\r\n                senderId: currentUser.uid,\r\n                date: Timestamp.now(),\r\n                img: downloadURL,\r\n              })\r\n            })\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      await updateDoc(doc(db, \"chats\", data.chatId), {\r\n        messages: arrayUnion({\r\n          id: uuid(),\r\n          text,\r\n          senderId: currentUser.uid,\r\n          date: Timestamp.now(),\r\n        })\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"input\">\r\n      <input type=\"text\" placeholder=\"Viết tin nhắn ...\" onChange={e => setText(e.target.value)} />\r\n\r\n      <div className=\"send\">\r\n        <img src={Attach} alt=\"\" />\r\n        <input type=\"file\" style={{ display: \"none\" }} id=\"file\" onChange={e => setImg(e.target.files[0])} />\r\n        <label htmlFor=\"file\">\r\n          <img src={Img} />\r\n        </label>\r\n        <button onClick={handleSend}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}